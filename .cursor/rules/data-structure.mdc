---
title: "데이터 구조 규칙"
description: "StockAlert 프로젝트의 핵심 데이터 모델, Supabase 데이터베이스 규칙 및 데이터 검증"
---

# 데이터 구조 규칙

## Supabase 데이터베이스 모델

### 사용자 (users)
```typescript
interface User {
  id: string;                    // UUID
  email: string;                 // 이메일 (로그인 ID)
  name: string;                  // 사용자 이름
  created_at: string;            // 계정 생성일
  updated_at: string;            // 정보 수정일
  is_active: boolean;            // 계정 활성화 상태
  last_login_at: string | null;  // 마지막 로그인 시간
  timezone: string;              // 사용자 시간대
}
```

### 주식 구독 (stock_subscriptions)
```typescript
interface StockSubscription {
  id: string;                    // UUID
  user_id: string;               // 사용자 ID (외래키)
  stock_code: string;             // 주식 코드 (예: "005930")
  stock_name: string;             // 주식명 (예: "삼성전자")
  market: string;                 // 시장 구분 ('KOSPI', 'KOSDAQ', 'NASDAQ', 'NYSE')
  added_at: string;               // 구독 추가일
  is_active: boolean;             // 구독 활성화 상태
  base_price: number | null;      // 구독 시점 기준 가격
  created_at: string;              // 생성일
  updated_at: string;             // 수정일
}
```

### 알림 조건 (alert_conditions)
```typescript
interface AlertCondition {
  id: string;                     // UUID
  subscription_id: string;        // 주식 구독 ID (외래키)
  condition_type: 'daily_drop' | 'daily_rise' | 'period_drop' | 'period_rise';
  threshold: number;              // 등락률 임계값 (%)
  period_days: number;            // 조건 적용 기간 (일)
  base_price: number;              // 조건 설정 시점 기준 가격
  target_price: number;           // 계산된 목표 가격
  is_active: boolean;             // 조건 활성화 상태
  created_at: string;             // 생성일
  updated_at: string;             // 수정일
  last_checked_at: string | null; // 마지막 조건 체크 시간
  condition_met_at: string | null; // 조건 충족 시점
}
```

### 주가 데이터 (stock_prices)
```typescript
interface StockPrice {
  id: string;                     // UUID
  stock_code: string;              // 주식 코드
  market: string;                  // 시장 구분
  price: number;                   // 현재 가격
  change_rate: number;             // 변화율 (%)
  change_amount: number;           // 변화량
  volume: number;                  // 거래량
  high_price: number | null;       // 고가
  low_price: number | null;        // 저가
  open_price: number | null;       // 시가
  close_price: number | null;      // 종가
  price_date: string;              // 가격 기준일 (YYYY-MM-DD)
  created_at: string;              // 생성일
}
```

### 알림 기록 (notifications)
```typescript
interface Notification {
  id: string;                     // UUID
  user_id: string;                // 사용자 ID (외래키)
  subscription_id: string;        // 주식 구독 ID (외래키)
  condition_id: string;           // 알림 조건 ID (외래키)
  notification_type: 'push' | 'email' | 'sms';
  title: string;                   // 알림 제목
  message: string;                // 알림 메시지
  sent_at: string;                // 발송 시간
  delivery_status: 'pending' | 'sent' | 'delivered' | 'failed';
  delivery_confirmed_at: string | null; // 전달 확인 시간
  error_message: string | null;    // 오류 메시지
}
```

### FCM 토큰 (fcm_tokens)
```typescript
interface FcmToken {
  id: string;                     // UUID
  user_id: string;                // 사용자 ID (외래키)
  token: string;                   // FCM 토큰
  device_type: 'web' | 'android' | 'ios';
  device_info: Record<string, any> | null; // 디바이스 정보 (JSON)
  is_active: boolean;             // 토큰 활성화 상태
  created_at: string;             // 생성일
  updated_at: string;             // 수정일
  last_used_at: string;           // 마지막 사용 시간
}
```

### 앱 설정 (app_settings)
```typescript
interface AppSetting {
  id: string;                     // UUID
  user_id: string;                // 사용자 ID (외래키)
  setting_key: string;            // 설정 키
  setting_value: string;          // 설정 값
  setting_type: 'string' | 'number' | 'boolean' | 'json';
  created_at: string;             // 생성일
  updated_at: string;             // 수정일
}
```

## Supabase 연동 규칙
- **타입 생성**: `supabase gen types typescript` 명령어로 자동 생성된 타입 사용
- **Row Level Security**: 모든 테이블에 RLS 정책 적용하여 사용자별 데이터 격리
- **배치 처리**: Supabase Scheduled Functions를 통한 정기적 주가 조회 및 조건 체크
- **데이터 일관성**: 외래키 제약조건을 통한 데이터 무결성 보장

## 데이터 검증 규칙
- **주식 코드**: 6자리 숫자 형식 검증 (`/^\d{6}$/`)
- **주식명**: 1-100자 문자열 검증
- **등락률**: 0.1% ~ 100% 범위 검증
- **기간**: 1-30일 범위 검증
- **이메일**: 유효한 이메일 형식 검증
- **UUID**: 유효한 UUID 형식 검증

## 데이터베이스 제약조건
- **UNIQUE 제약조건**: 사용자별 주식 코드 중복 방지
- **CHECK 제약조건**: 등락률, 기간 등 범위 제한
- **NOT NULL 제약조건**: 필수 필드에 대한 제약
- **외래키 제약조건**: 참조 무결성 보장